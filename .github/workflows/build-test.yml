name: 'Build Test'
on: # rebuild any PRs and main branch changes
  pull_request:
    paths:
      - '.github/workflows/build-test.yml'
      - '__tests__/**'
      - 'dist/**'
      - 'src/**'
      - 'types/**'
      - '.eslint*'
      - '*ts'
      - '*.json'
      - 'serverless.yml'
  push:
    branches:
      - main
      - releases/*
    paths:
      - '.github/workflows/build-test.yml'
      - '__tests__/**'
      - 'dist/**'
      - 'src/**'
      - 'types/**'
      - '.eslint*'
      - '*ts'
      - '*.json'
      - 'serverless.yml'

env:
  TENCENTCLOUD_SECRET_ID: ${{ secrets.TENCENTCLOUD_SECRET_ID }}
  TENCENTCLOUD_SECRET_KEY: ${{ secrets.TENCENTCLOUD_SECRET_KEY}}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SENTRY_ENVIRONMENT: "testing"

jobs:
  build: # make sure build/ci work properly
    name: 'Build'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '15' ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v2.1.6
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install package.json dependencies with Yarn
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true

      - run: yarn build

  eslint:
    name: 'Eslint'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '15' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v2.1.6
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install package.json dependencies with Yarn
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true

      - run: yarn lint

  tests:
    name: 'Tests'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '15' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v2.1.6
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install package.json dependencies with Yarn
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true

      - run: yarn test --coverage